<?xml version="1.0"?>
<!--

    Copyright (C) 2009-2011 the original author or authors.
    See the notice.md file distributed with this work for additional
    information regarding copyright ownership.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.fusesource</groupId>
    <artifactId>fusesource-pom</artifactId>
    <version>1.8</version>
  </parent>
  
  <artifactId>org.fusesource.coffeebar</artifactId>
  <name>coffeebar</name>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <url>http://${forge-project-id}.fusesource.org/</url>
  <inceptionYear>2011</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://github.com/fusesource/${forge-project-id}.git</connection>
    <developerConnection>scm:git:ssh://git@github.com:fusesource/${forge-project-id}.git</developerConnection>
    <url>http://github.com/fusesource/${forge-project-id}/tree/master</url>
  </scm>

  <distributionManagement>
    <site>
      <id>website.fusesource.org</id>
      <name>website</name>
      <url>dav:http://fusesource.com/forge/dav/${forge-project-id}/maven/${project.version}</url>
    </site>
  </distributionManagement>

  <developers>
    <developer>
      <id>chirino</id>
      <name>Hiram Chirino</name>
      <url>http://hiramchirino.com/blog/</url>
      <organization>FuseSource</organization>
      <organizationUrl>http://fusesource.com/</organizationUrl>
    </developer>
  </developers>

  <properties>
    <forge-project-id>coffeebar</forge-project-id>

    <scala-version>2.9.1</scala-version>
    <scala-plugin-version>2.15.1</scala-plugin-version>
    
    <servlet-api-version>2.5</servlet-api-version>
    <jersey-version>1.5</jersey-version>
    <jackson-version>1.8.4</jackson-version>
    <slf4j-api-version>1.6.1</slf4j-api-version>
    <logback-version>0.9.26</logback-version>

    <jetty-plugin-version>7.4.5.v20110725</jetty-plugin-version>
    <jetty-version>7.4.5.v20110725</jetty-version>
    
  </properties>

  <dependencies>
    
    <!-- To implement services with Scala -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala-version}</version>
    </dependency>

    <!-- For JAX-RS -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    
    
    <!-- JSON encoding/decoding -->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson-version}</version>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
      <optional>true</optional>
    </dependency>
    
    <!-- To start an embedded Jetty -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-continuation</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-http</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-io</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-security</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-websocket</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-xml</artifactId>
      <version>${jetty-version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
  
  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>${scala-plugin-version}</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-deprecation</arg>
              </args>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <jvmArgs>
            <jvmArg>-Xmx1024m</jvmArg>
            <jvmArg>-Xss8m</jvmArg>
          </jvmArgs>
          <scalaVersion>${scala-version}</scalaVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>org.fusesource.coffeebar.HttpServer</mainClass>
          <classpathScope>test</classpathScope>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty-plugin-version}</version>
        <configuration>
          <webAppConfig>
            <contextPath>/</contextPath>
            <resourceBase>${basedir}/target/webapp</resourceBase>
          </webAppConfig>
          <systemProperties>
            <systemProperty>
              <name>com.sun.management.jmxremote</name>
              <value/>
            </systemProperty>
          </systemProperties>
          <scanIntervalSeconds>1</scanIntervalSeconds>
        </configuration>
        
        <dependencies>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api-version}</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <exec executable="rake"/>
                <mkdir dir="${basedir}/target/webapp-min"/>
                <copy todir="${basedir}/target/webapp-min">
                  <fileset dir="${basedir}/target/webapp">
                    <include name="*.html"/>
                    <include name="img/**"/>
                    <include name="*.json"/>
                    <include name="**/*.json"/>
                    <include name="app/frameworks/require.js"/>
                    <include name="WEB-INF/**/*"/>
                  </fileset>
                </copy>
                <!-- optimize the java script -->
                <java classpathref="maven.plugin.classpath" fork="true" dir="${basedir}/target" classname="org.mozilla.javascript.tools.shell.Main">
                  <arg value="${basedir}/src/main/tools/r.js"/>
                  <arg value="-o"/>
                  <arg value="baseUrl=${basedir}/target/webapp/app"/>
                  <arg value="name=main"/>
                  <arg value="optimize=closure"/>
                  <arg value="out=${basedir}/target/webapp-min/app/main.js"/>
                </java>
                <!-- optimize the css -->
                <java classpathref="maven.plugin.classpath" fork="true" dir="${basedir}/target" classname="org.mozilla.javascript.tools.shell.Main">
                  <arg value="${basedir}/src/main/tools/r.js"/>
                  <arg value="-o"/>
                  <arg value="cssIn=${basedir}/target/webapp/styles/main.css"/>
                  <arg value="out=${basedir}/target/webapp-min/styles/main.css"/>
                </java>
              </target>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>rhino</groupId>
            <artifactId>js</artifactId>
            <version>1.7R2</version>
          </dependency>
          <dependency>
            <groupId>com.google.javascript</groupId>
            <artifactId>closure-compiler</artifactId>
            <version>r1352</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <warSourceDirectory>${basedir}/target/webapp-min</warSourceDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          
          <!-- Generate the Scala Docs so that they can be included in the javadoc artifact -->
          <plugin>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
            <version>${scala-plugin-version}</version>
            <executions>
              <execution>
                <id>doc</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>doc</goal>
                </goals>
                <configuration>
                  <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
                  <outputDirectory>apidocs</outputDirectory>
                </configuration>                
              </execution>
            </executions>
          </plugin>

        </plugins> 
      </build>
    </profile>
    
    <!-- 
      Do a license check by running       : mvn -P license license:check
      Update the license check by running : mvn -P license license:format
    -->
    <profile>
      <id>license</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila.maven-license-plugin</groupId>
            <artifactId>maven-license-plugin</artifactId>
            <version>1.9.0</version>
            <configuration>
              <quiet>false</quiet>
              <header>src/main/resources/license-header.txt</header>
              <aggregate>true</aggregate>
              <includes>
                <include>src/**</include>
                <include>**/pom.xml</include>
              </includes>
              <excludes>
                <exclude>**/.git/**</exclude>
                <exclude>**/*.md</exclude>
                <exclude>src/main/tools/**</exclude>
                <exclude>src/main/webapp/app/frameworks/**</exclude>

                <!-- ignore files produced during a build -->
                <exclude>**/target/**</exclude>

                <!-- ignore binary files -->
                <exclude>**/*.jpg</exclude>
                <exclude>**/*.png</exclude>
                <exclude>**/*.gif</exclude>
                <exclude>**/*.ico</exclude>
                <exclude>**/*.keystore</exclude>
              </excludes>
              <useDefaultExcludes>false</useDefaultExcludes>
              <mapping>
                <ssp>DYNASCRIPT_STYLE</ssp>
                <jj>JAVADOC_STYLE</jj>
                <index>SCRIPT_STYLE</index>
                <jade>HAML_STYLE</jade>
                <coffee>SCRIPT_STYLE</coffee>
              </mapping>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
  </profiles>
  
</project>
